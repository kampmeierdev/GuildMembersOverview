// <auto-generated />
using System;
using GuildMembersOverview.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuildMembersOverview.Migrations
{
    [DbContext(typeof(GuildMembersOverviewContext))]
    [Migration("20230101155227_ForEdit")]
    partial class ForEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuildMembersOverview.Models.Character", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("GuildMembersOverview.Models.LootInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Received")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CharacterID");

                    b.ToTable("LootInfo", (string)null);
                });

            modelBuilder.Entity("GuildMembersOverview.Models.RaidAttendance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<int>("AttendanceCount")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RaidDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SignedUp")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CharacterID");

                    b.ToTable("RaidAttendance", (string)null);
                });

            modelBuilder.Entity("GuildMembersOverview.Models.LootInfo", b =>
                {
                    b.HasOne("GuildMembersOverview.Models.Character", "Character")
                        .WithMany("LootInfos")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GuildMembersOverview.Models.RaidAttendance", b =>
                {
                    b.HasOne("GuildMembersOverview.Models.Character", "Character")
                        .WithMany("RaidAttendances")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("GuildMembersOverview.Models.Character", b =>
                {
                    b.Navigation("LootInfos");

                    b.Navigation("RaidAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
